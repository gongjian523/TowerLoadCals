<dx:ThemedWindow 
        x:Class="TowerLoadCals.Modules.StruTemplateEditWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:dxci="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
        xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns:dxlc="http://schemas.devexpress.com/winfx/2008/xaml/layoutcontrol"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
        xmlns:cvt="clr-namespace:TowerLoadCals.Converter"
        xmlns:local="clr-namespace:TowerLoadCals.Modules"
        mc:Ignorable="d"
        Title="工况模板" Height="800" Width="1200"
        Closed="ThemedWindow_Closed">
    <dx:ThemedWindow.Resources>
        <local:ColumnTemplateSelector x:Key="ColumnTemplateSelector"/>
        <Style x:Key="ColumnStyle" TargetType="dxg:GridColumn">
            <Setter Property="FilterPopupMode" Value="CheckedList"/>
        </Style>
        <DataTemplate x:Key="DefaultColumnTemplate">
            <ContentControl>
                <dxg:GridColumn FieldName="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).FieldName, RelativeSource={RelativeSource Self}}"/>
            </ContentControl>
        </DataTemplate>
        <DataTemplate x:Key="ComboColumnTemplate">
            <ContentControl>
                <dxg:GridColumn  FieldName="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).FieldName, RelativeSource={RelativeSource Self}}"
                                 Header="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Header, RelativeSource={RelativeSource Self}}">
                    <dxg:GridColumn.EditSettings>
                        <dxe:ComboBoxEditSettings ItemsSource="{Binding Source}"/>
                    </dxg:GridColumn.EditSettings>
                </dxg:GridColumn>
            </ContentControl>
        </DataTemplate>
        <DataTemplate x:Key="BindingColumnTemplate">
            <ContentControl>
                <dxg:GridColumn local:BindingHelper.Path="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).FieldName, RelativeSource={RelativeSource Self}}"
                                Header="{Binding Path=(dxci:DependencyObjectExtensions.DataContext).Header, RelativeSource={RelativeSource Self}}"/>
            </ContentControl>
        </DataTemplate>
        <cvt:BooleanVisibityConverter x:Key="BooleanVisibityConverter"/>
        <cvt:InverseBooleanVisibityConverter x:Key="InverseBooleanVisibityConverter"/>
        <cvt:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </dx:ThemedWindow.Resources>
    <dx:ThemedWindow.WindowStartupLocation>
        <WindowStartupLocation>CenterScreen</WindowStartupLocation>
    </dx:ThemedWindow.WindowStartupLocation>
    <Grid Margin="20,20,20,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <dxlc:LayoutGroup Orientation="Horizontal">
            <dxlc:LayoutItem Label="模板名: ">
                <dxe:TextEdit EditValue="{Binding TowerName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="{Binding IsReadOnly}"/>
            </dxlc:LayoutItem>
            <dxlc:LayoutItem Label="塔型: " Margin="5,0,0,0" Visibility="{Binding IsReadOnly,Converter={StaticResource InverseBooleanVisibityConverter}}">
                <dxe:ComboBoxEdit ItemsSource="{Binding TowerTypes}"  SelectedItem="{Binding TowerType}" IsReadOnly="{Binding IsReadOnly}">
                    <dxe:ComboBoxEdit.StyleSettings>
                        <dxe:ComboBoxStyleSettings />
                    </dxe:ComboBoxEdit.StyleSettings>
                </dxe:ComboBoxEdit>
            </dxlc:LayoutItem>
            <dxlc:LayoutItem Label="塔型: " Margin="5,0,0,0" Visibility="{Binding IsReadOnly,Converter={StaticResource BooleanVisibityConverter}}">
                <dxe:TextEdit EditValue="{Binding TowerType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
            </dxlc:LayoutItem>
        </dxlc:LayoutGroup>
        
        <Grid Grid.Row="1" Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Button  Content="增加电线" Command="{DXCommand 'AddWire()'}"  Width="80" Height="20" VerticalAlignment="Top"
                     Visibility="{Binding IsReadOnly, Converter={StaticResource InverseBooleanVisibityConverter}}"/>
            <dxg:GridControl  Grid.Column="1" ItemsSource="{Binding Wires}"  ColumnsSource="{Binding WireColumns}" MaxHeight="500"    SelectionMode="Cell"  ClipboardCopyMode="ExcludeHeader" 
                                                ColumnGeneratorTemplateSelector="{StaticResource ColumnTemplateSelector}" ColumnGeneratorStyle="{StaticResource ColumnStyle}" >
                <dxg:GridControl.View>
                    <dxg:TableView NavigationStyle="Cell" AutoWidth="True" EnableImmediatePosting="True" AllowPerPixelScrolling="True" PasteMode="Update"
                                                ShowGroupPanel="False" IsTotalSummaryMenuEnabled="False" HorizontalAlignment="Left"  />
                </dxg:GridControl.View>
            </dxg:GridControl>
        </Grid>

        <Grid Grid.Row="2" Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Button  Content="增加工况" Command="{DXCommand 'AddWorkCondition()'}"  Width="80" Height="20" VerticalAlignment="Top"
                     Visibility="{Binding IsReadOnly, Converter={StaticResource InverseBooleanVisibityConverter}}"/>
            <dxg:GridControl  Grid.Column="1" ItemsSource="{Binding WorkConditions}"  ColumnsSource="{Binding WorkConditionColumns}" MaxHeight="500"    SelectionMode="Cell"  ClipboardCopyMode="ExcludeHeader" 
                                                ColumnGeneratorTemplateSelector="{StaticResource ColumnTemplateSelector}" ColumnGeneratorStyle="{StaticResource ColumnStyle}" >
                <dxg:GridControl.View>
                    <dxg:TableView NavigationStyle="Cell" AutoWidth="True" EnableImmediatePosting="True" AllowPerPixelScrolling="True" PasteMode="Update"
                                                ShowGroupPanel="False" IsTotalSummaryMenuEnabled="False" />
                </dxg:GridControl.View>
            </dxg:GridControl>
        </Grid>

        <Grid Grid.Row="3"  Margin="0,10,0,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Button  Content="增加工况组合" Command="{DXCommand 'AddWorkConditionCombo()'}"  Width="80" Height="20" HorizontalAlignment="Left" VerticalAlignment="Top"
                     Visibility="{Binding IsReadOnly, Converter={StaticResource InverseBooleanVisibityConverter}}"/>
            <dxg:GridControl  Grid.Column="1" ItemsSource="{Binding WorkConditionCombos}"  ColumnsSource="{Binding WorkConditionComboColumns}" MaxHeight="500"    SelectionMode="Cell"  ClipboardCopyMode="ExcludeHeader" 
                                                ColumnGeneratorTemplateSelector="{StaticResource ColumnTemplateSelector}" ColumnGeneratorStyle="{StaticResource ColumnStyle}"  VerticalAlignment="Top">
                <dxg:GridControl.View>
                    <dxg:TableView NavigationStyle="Cell" AutoWidth="True" EnableImmediatePosting="True" AllowPerPixelScrolling="True" PasteMode="Update"
                                                ShowGroupPanel="False" IsTotalSummaryMenuEnabled="False" />
                </dxg:GridControl.View>
            </dxg:GridControl>
        </Grid>

        <Grid Grid.Row="4" Margin="0,10,0,0" Visibility="{Binding IsReadOnly, Converter={StaticResource InverseBooleanVisibityConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Content="保存" Command="{DXCommand 'onConfirm()', CanExecute = 'SaveCanExecute'}" Width="100"  Height="30" />
            <Button Content="取消" Grid.Column="1" Command="{DXCommand 'onConcel()'}"  Width="100" Height="30"/>
        </Grid>

        <Button Grid.Row="4" Margin="0,10,0,0" Visibility="{Binding IsReadOnly, Converter={StaticResource BooleanVisibityConverter}}"
                Content="返回" Command="{DXCommand 'onConcel()'}"  Width="100" Height="30"/>

    </Grid>
</dx:ThemedWindow>
